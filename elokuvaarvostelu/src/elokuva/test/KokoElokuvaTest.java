package elokuva.test;
// Generated by ComTest BEGIN
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import elokuva.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2025.03.19 13:52:49 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KokoElokuvaTest {



  // Generated by ComTest BEGIN
  /** 
   * testPoista99 
   * @throws SailoException when error
   */
  @Test
  public void testPoista99() throws SailoException {    // KokoElokuva: 99
    KokoElokuva kokoelokuva = new KokoElokuva(); 
    Elokuva elokuva1 = new Elokuva(); elokuva1.lisaaElokuva();  // ID 1
    Elokuva elokuva2 = new Elokuva(); elokuva2.lisaaElokuva();  // ID 2
    Arvostelu arv1 = new Arvostelu(); arv1.taytaArvostelu(1, 1); 
    Arvostelu arv2 = new Arvostelu(); arv2.taytaArvostelu(1, 2); 
    kokoelokuva.lisaa(elokuva1); 
    kokoelokuva.lisaa(elokuva2); 
    kokoelokuva.lisaa(arv1); 
    kokoelokuva.lisaa(arv2); 
    assertEquals("From: KokoElokuva line: 110", 2, kokoelokuva.getElokuvat()); 
    assertEquals("From: KokoElokuva line: 111", 0, kokoelokuva.annaArvostelut(elokuva1).size());  //TODO: tarkista
    kokoelokuva.poista(elokuva1); 
    assertEquals("From: KokoElokuva line: 113", 1, kokoelokuva.getElokuvat()); 
    assertEquals("From: KokoElokuva line: 114", true, kokoelokuva.annaElokuva(0) == elokuva2); 
    assertEquals("From: KokoElokuva line: 115", 0, kokoelokuva.annaArvostelut(elokuva1).size()); 
    kokoelokuva.poista(null); 
    assertEquals("From: KokoElokuva line: 118", 1, kokoelokuva.getElokuvat()); 
    Elokuva elokuva3 = new Elokuva(); elokuva3.lisaaElokuva();  // ID 3
    kokoelokuva.lisaa(elokuva3); 
    assertEquals("From: KokoElokuva line: 122", 2, kokoelokuva.getElokuvat()); 
    kokoelokuva.poista(elokuva2);  // Ei arvosteluja
    assertEquals("From: KokoElokuva line: 124", 1, kokoelokuva.getElokuvat()); 
    assertEquals("From: KokoElokuva line: 125", true, kokoelokuva.annaElokuva(0) == elokuva3); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaNimet139 */
  @Test
  public void testAnnaNimet139() {    // KokoElokuva: 139
    Nimimerkit nimimerkit = new Nimimerkit(); 
    Nimimerkki nimi1 = new Nimimerkki(); nimi1.rekisteroi(); nimimerkit.lisaa(nimi1); 
    Nimimerkki nimi2 = new Nimimerkki(); nimi2.rekisteroi(); nimimerkit.lisaa(nimi2); 
    Nimimerkki nimi3 = new Nimimerkki(); nimi3.rekisteroi(); nimimerkit.lisaa(nimi3); 
    Nimimerkki nimi4 = new Nimimerkki(); nimi4.rekisteroi(); nimimerkit.lisaa(nimi4); 
    Nimimerkki nimi5 = new Nimimerkki(); nimi5.rekisteroi(); nimimerkit.lisaa(nimi5); 
    Nimimerkki nimi6 = new Nimimerkki(); nimi6.rekisteroi(); nimimerkit.lisaa(nimi6); 
    List<Nimimerkki> loytyneet; 
    loytyneet = nimimerkit.annaNimet(1); 
    assertEquals("From: KokoElokuva line: 153", 1, loytyneet.size()); 
    loytyneet = nimimerkit.annaNimet(2); 
    assertEquals("From: KokoElokuva line: 155", 1, loytyneet.size()); 
    loytyneet = nimimerkit.annaNimet(3); 
    assertEquals("From: KokoElokuva line: 157", 1, loytyneet.size()); 
    assertEquals("From: KokoElokuva line: 158", true, loytyneet.get(0) == nimi3); 
    assertEquals("From: KokoElokuva line: 159", false, loytyneet.get(0) == nimi2); 
    loytyneet = nimimerkit.annaNimet(3); 
    assertEquals("From: KokoElokuva line: 161", 1, loytyneet.size()); 
    assertEquals("From: KokoElokuva line: 162", true, loytyneet.get(0) == nimi3); 
    assertEquals("From: KokoElokuva line: 163", false, loytyneet.get(0) == nimi1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaArvostelut202 */
  @Test
  public void testAnnaArvostelut202() {    // KokoElokuva: 202
    KokoElokuva kokoelokuva = new KokoElokuva(); 
    Elokuva elokuva1 = new Elokuva(); Elokuva elokuva2 = new Elokuva(); Elokuva elokuva3 = new Elokuva(); 
    elokuva1.lisaaElokuva(); elokuva2.lisaaElokuva(); elokuva3.lisaaElokuva(); 
    int id1 = elokuva1.getElokuvaId(); 
    int id2 = elokuva2.getElokuvaId(); 
    Arvostelu arvostelu11 = new Arvostelu(id1); kokoelokuva.lisaa(arvostelu11); 
    Arvostelu arvostelu12 = new Arvostelu(id1); kokoelokuva.lisaa(arvostelu12); 
    Arvostelu arvostelu21 = new Arvostelu(id2); kokoelokuva.lisaa(arvostelu21); 
    Arvostelu arvostelu22 = new Arvostelu(id2); kokoelokuva.lisaa(arvostelu22); 
    Arvostelu arvostelu23 = new Arvostelu(id2); kokoelokuva.lisaa(arvostelu23); 
    List<Arvostelu> loytyneet; 
    loytyneet = kokoelokuva.annaArvostelut(elokuva3); 
    assertEquals("From: KokoElokuva line: 218", 0, loytyneet.size()); 
    loytyneet = kokoelokuva.annaArvostelut(elokuva1); 
    assertEquals("From: KokoElokuva line: 220", 2, loytyneet.size()); 
    assertEquals("From: KokoElokuva line: 221", true, loytyneet.get(0) == arvostelu11); 
    assertEquals("From: KokoElokuva line: 222", true, loytyneet.get(1) == arvostelu12); 
    loytyneet = kokoelokuva.annaArvostelut(elokuva2); 
    assertEquals("From: KokoElokuva line: 224", 3, loytyneet.size()); 
    assertEquals("From: KokoElokuva line: 225", true, loytyneet.get(0) == arvostelu21); 
  } // Generated by ComTest END
}